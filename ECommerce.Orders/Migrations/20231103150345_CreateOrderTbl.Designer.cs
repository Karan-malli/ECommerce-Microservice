// <auto-generated />
using System;
using ECommerce.Orders.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ECommerce.Orders.Migrations
{
    [DbContext(typeof(OrderDBContext))]
    [Migration("20231103150345_CreateOrderTbl")]
    partial class CreateOrderTbl
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ECommerce.Orders.Models.Order", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CustomerID = 1,
                            OrderDate = new DateTime(2023, 11, 3, 8, 3, 44, 879, DateTimeKind.Local).AddTicks(1479),
                            TotalPrice = 100m
                        },
                        new
                        {
                            ID = 2,
                            CustomerID = 1,
                            OrderDate = new DateTime(2023, 11, 2, 8, 3, 44, 879, DateTimeKind.Local).AddTicks(1531),
                            TotalPrice = 100m
                        },
                        new
                        {
                            ID = 3,
                            CustomerID = 2,
                            OrderDate = new DateTime(2023, 11, 3, 8, 3, 44, 879, DateTimeKind.Local).AddTicks(1537),
                            TotalPrice = 100m
                        });
                });

            modelBuilder.Entity("ECommerce.Orders.Models.OrderItem", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("OrderID");

                    b.ToTable("OrderItem");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            OrderID = 1,
                            Price = 10m,
                            ProductID = 1,
                            Quantity = 10
                        },
                        new
                        {
                            ID = 2,
                            OrderID = 1,
                            Price = 20m,
                            ProductID = 2,
                            Quantity = 20
                        },
                        new
                        {
                            ID = 3,
                            OrderID = 1,
                            Price = 30m,
                            ProductID = 3,
                            Quantity = 30
                        },
                        new
                        {
                            ID = 4,
                            OrderID = 2,
                            Price = 210m,
                            ProductID = 2,
                            Quantity = 2
                        },
                        new
                        {
                            ID = 5,
                            OrderID = 3,
                            Price = 310m,
                            ProductID = 3,
                            Quantity = 3
                        });
                });

            modelBuilder.Entity("ECommerce.Orders.Models.OrderItem", b =>
                {
                    b.HasOne("ECommerce.Orders.Models.Order", null)
                        .WithMany("Items")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ECommerce.Orders.Models.Order", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
