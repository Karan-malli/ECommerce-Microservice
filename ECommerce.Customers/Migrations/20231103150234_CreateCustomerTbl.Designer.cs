// <auto-generated />
using ECommerce.Customers.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ECommerce.Customers.Migrations
{
    [DbContext(typeof(CustomerDBContext))]
    [Migration("20231103150234_CreateCustomerTbl")]
    partial class CreateCustomerTbl
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ECommerce.Customers.DB.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.HasKey("CustomerID");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerID = 1,
                            Email = "karan@ep.com",
                            Name = "Thor",
                            Phone = 911911911
                        },
                        new
                        {
                            CustomerID = 2,
                            Email = "Loki@ep.com",
                            Name = "Loki",
                            Phone = 420420420
                        },
                        new
                        {
                            CustomerID = 3,
                            Email = "Thanos@ep.com",
                            Name = "Thanos",
                            Phone = 786786786
                        },
                        new
                        {
                            CustomerID = 4,
                            Email = "Steve@ep.com",
                            Name = "Steve",
                            Phone = 7007007
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
